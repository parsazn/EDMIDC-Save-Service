version: '3'

services:

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - 8090:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

  prometheus:
    image: prom/prometheus:v2.44.0
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana:9.5.2
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources

  influxdb:
    container_name: influxdb
    image: docker.io/library/influxdb:2.7.6-alpine
    # (Optional) remove this section when using traefik
    ports:
      - '8086:8086'
    volumes:
      - influxdb-data:/var/lib/influxdb2
      - /etc/influxdb2:/etc/influxdb2
      # (Optional) when using certificate
      # - /etc/ssl/cert.pem/:/etc/ssl/cert.pem  # (optional) if you're using self-signed certs
      # - /etc/ssl/cert-key.pem/:/etc/ssl/cert-key.pem  # (optional) if you're using self-signed certs
    # (Optional) when using certificate
    # command: influxd --tls-cert=/etc/ssl/cert.pem --tls-key=/etc/ssl/cert-key.pem  # (optional) if you're using self-signed certs
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=my-user
      - DOCKER_INFLUXDB_INIT_PASSWORD=my-password
      - DOCKER_INFLUXDB_INIT_ORG=my-org
      - DOCKER_INFLUXDB_INIT_BUCKET=my-bucket
    # (Optional) change retention time
    #   - DOCKER_INFLUXDB_INIT_RETENTION=1w  # (optional) configure data retention 1 week
    # (Optional) add admin token
    #   - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=my-super-secret-auth-token  # (optional) set admin token
    # (Optional) when using traefik
    # labels:
    #   - traefik.enable=true
    #   - traefik.http.services.influxdb.loadbalancer.server.port=8086
    #   - traefik.http.services.influxdb.loadbalancer.server.scheme=https
    #   - traefik.http.routers.influxdb-https.entrypoints=websecure
    #   - traefik.http.routers.influxdb-https.rule=Host(`your-server-url`)
    #   - traefik.http.routers.influxdb-https.tls=true
    #   - traefik.http.routers.influxdb-https.tls.certresolver=your-certresolver
    # (Optional) when using custom network
    # networks:
    #   - yournetwork
    restart: unless-stopped

    #  docker run -p 8086:8086 \
    #  -e INFLUXDB_DB=defaultdb \
    #  -e INFLUXDB_ADMIN_USER=admin \
    #  -e INFLUXDB_ADMIN_PASSWORD=adminpass \
    #  -e INFLUXDB_USER=user \
    #  -e INFLUXDB_USER_PASSWORD=userpass \
    #  -v influxdb:/var/lib/influxdb \
    #  influxdb:latest